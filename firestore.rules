rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        (request.auth.token.role == 'admin' || 
         request.auth.token.admin == true || 
         request.auth.token.email == 'grupomanso@gmail.com');
    }

    function isClient() {
      return request.auth != null && 
        (request.auth.token.clientId != null || 
         request.auth.token.allowedGameIds != null);
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function canAccessGame(gameId) {
      return isAdmin() || 
        (isClient() && 
          (request.auth.token.clientId == gameId || 
           request.auth.token.allowedGameIds.hasAny([gameId])));
    }

    // Juegos
    match /games/{gameId} {
      // Lectura pública para el juego actual
      allow read: if true;
      
      // Escritura solo por admin o el cliente dueño del juego
      allow write: if canAccessGame(gameId);

      // Subcollección de participantes
      match /customers/{customerId} {
        allow read: if true;  // Lectura pública
        allow create: if true; // Cualquiera puede registrarse
        allow update: if request.auth != null || 
          (request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['hasPlayed', 'prizeWonName', 'prizeWonAt']));
        allow delete: if canAccessGame(gameId);
      }
    }

    // Clientes (nueva colección)
    match /clients/{clientId} {
      allow read: if isAdmin() || 
        (isClient() && request.auth.token.clientId == clientId);
      allow write: if isAdmin();

      // Subcollección de juegos del cliente
      match /games/{gameId} {
        allow read: if isAdmin() || 
          (isClient() && request.auth.token.clientId == clientId);
        allow write: if isAdmin();
      }
    }
    
    // Colección de prueba para verificar la conexión
    match /health_check/{doc} {
      allow read, write: if true;
    }

    // Reglas para los correos salientes
    match /outbound_emails/{emailId} {
      allow read: if isAuthenticated() && (
        isAdmin() ||
        resource.data.clientId == request.auth.token.clientId
      );
      allow create: if isAdmin();
    }
  }
}
